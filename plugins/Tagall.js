const { Module } = require('../lib/plugins');

Module({
    command: 'tagall',
    package: 'group',
    description: 'Tag all group members with custom style'
})(async (m,text) => {
    if (!m.isGroup ) return await m.sendreply("*_This command is for groups_*");
   if (!m.isAdmin || !m.isBotAdmin) return await m.sendreply("*_Only bot owner and group admins can use this command_*");
    try {
      const conn = m.conn;
      const from = m.from;
      const groupMetadata = await conn.groupMetadata(from);
      const participants = groupMetadata.participants;
      const groupName = groupMetadata.subject || "Unknown Group";
      let totalMembers = participants ? participants.length : 0;
      if (totalMembers === 0)
        return m.reply("‚ùå No members found in this group.");
      const msgText = text?.trim() || "ATTENTION EVERYONE";
      const emojis = [
        "‚ö°",
        "‚ú®",
        "üéñÔ∏è",
        "üíé",
        "üî±",
        "üíó",
        "‚ù§‚Äçü©π",
        "üëª",
        "üåü",
        "ü™Ñ",
        "üéã",
        "ü™º",
        "üçø",
        "üëÄ",
        "üëë",
        "ü¶ã",
        "üêã",
        "üåª",
        "üå∏",
        "üî•",
        "üçâ",
        "üçß",
        "üç®",
        "üç¶",
        "üßÉ",
        "ü™Ä",
        "üéæ",
        "ü™á",
        "üé≤",
        "üé°",
        "üß∏",
        "üéÄ",
        "üéà",
        "ü©µ",
        "‚ô•Ô∏è",
        "üö©",
        "üè≥Ô∏è‚Äçüåà",
        "üèñÔ∏è",
        "üî™",
        "üéè",
        "ü´ê",
        "üçì",
        "üíã",
        "üçÑ",
        "üéê",
        "üçá",
        "üêç",
        "ü™ª",
        "ü™∏",
        "üíÄ",
      ];
      const getEmoji = () => emojis[Math.floor(Math.random() * emojis.length)];
      let tagText = `*‚ñ¢ GROUP : ${groupName}*\n*‚ñ¢ MEMBERS : ${totalMembers}*\n*‚ñ¢ MESSAGE : ${msgText}*\n\n*‚ï≠‚îà‚îÄ„Äå …¶‡πÄ Œ±‚Ñì‚Ñì ∆í…æ‡πÄŒµ…≥‚àÇ‡∏£ ü•∞ „Äç‚îà‚ùç*\n`;
      for (const p of participants) {
        tagText += `*‚îÇ${getEmoji()} ·©ßùÜº‡æÄ‡Ω≤* @${p.id.split("@")[0]}\n`;
      }
      tagText += "*‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç*";
      const mentions = participants.map((p) => p.id);
      await conn.sendMessage(
        from,
        {
          text: tagText,
          mentions,
        },
        { quoted: m }
      );
    } catch (err) {
      console.error("tagall error:", err);
      m.reply("‚ùå An error occurred while tagging members.");
    }
  }
   );


Module({
    command: 'admin',
    package: 'group',
    description: 'Tag all group admins'
})(async (m, text) => {
    if (!m.isGroup) return await m.sendReply("*_This command is for groups_*");
    if (!m.isAdmin || !m.isBotAdmin) return await m.sendReply("*_Only bot owner and group admins can use this command_*");

    try {
        const conn = m.conn;
        const from = m.from;
        const groupMetadata = await conn.groupMetadata(from);
        const participants = groupMetadata.participants;
        const groupName = groupMetadata.subject || "Unknown Group";

        // Filter only admins and super admins
        const admins = participants.filter(p => p.admin === 'admin' || p.admin === 'superadmin');
        const totalAdmins = admins.length;

        if (totalAdmins === 0) {
            return await m.sendReply("‚ùå No admins found in this group.");
        }

        const msgText = text?.trim() || "ATTENTION ADMINS";

        const emojis = [
            "‚ö°", "‚ú®", "üéñÔ∏è", "üíé", "üî±", "üíó", "‚ù§‚Äçü©π", "üëª", 
            "üåü", "ü™Ñ", "üéã", "ü™º", "üçø", "üëÄ", "üëë", "ü¶ã", 
            "üêã", "üåª", "üå∏", "üî•", "üçâ", "üçß", "üç®", "üç¶", 
            "üßÉ", "ü™Ä", "üéæ", "ü™á", "üé≤", "üé°", "üß∏", "üéÄ", 
            "üéà", "ü©µ", "‚ô•Ô∏è", "üö©", "üè≥Ô∏è‚Äçüåà", "üèñÔ∏è", "üî™", "üéè", 
            "ü´ê", "üçì", "üíã", "üçÑ", "üéê", "üçá", "üêç", "ü™ª", 
            "ü™∏", "üíÄ"
        ];

        const getEmoji = () => emojis[Math.floor(Math.random() * emojis.length)];

        let tagText = `*‚ñ¢ GROUP : ${groupName}*\n*‚ñ¢ ADMINS : ${totalAdmins}*\n*‚ñ¢ MESSAGE : ${msgText}*\n\n*‚ï≠‚îà‚îÄ„Äå Œ±‚Ñì‚Ñì Œ±‚àÇ…±‡πÄ…≥‡∏£ üëë „Äç‚îà‚ùç*\n`;

        for (const admin of admins) {
            const role = admin.admin === 'superadmin' ? 'üåü' : 'üëÆ';
            tagText += `*‚îÇ${getEmoji()} ${role}* @${admin.id.split("@")[0]}\n`;
        }

        tagText += "*‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç*";

        const mentions = admins.map((a) => a.id);

        await conn.sendMessage(
            from,
            {
                text: tagText,
                mentions,
            },
            { quoted: m }
        );
    } catch (err) {
        console.error("admin tag error:", err);
        await m.sendReply("‚ùå An error occurred while tagging admins.");
    }
});